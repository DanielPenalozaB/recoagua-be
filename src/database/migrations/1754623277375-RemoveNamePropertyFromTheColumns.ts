import { MigrationInterface, QueryRunner } from "typeorm";

export class RemoveNamePropertyFromTheColumns1754623277375 implements MigrationInterface {
    name = 'RemoveNamePropertyFromTheColumns1754623277375'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "regions" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "regions" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "regions" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "badges" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "badges" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "badges" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "badges" DROP COLUMN "image_url"`);
        await queryRunner.query(`ALTER TABLE "challenges" DROP COLUMN "challenge_type"`);
        await queryRunner.query(`DROP TYPE "public"."challenges_challenge_type_enum"`);
        await queryRunner.query(`ALTER TABLE "challenges" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "challenges" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "challenges" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "user_challenges" DROP COLUMN "completed_at"`);
        await queryRunner.query(`ALTER TABLE "user_challenges" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "user_progress" DROP COLUMN "completed_at"`);
        await queryRunner.query(`ALTER TABLE "user_progress" DROP COLUMN "earned_points"`);
        await queryRunner.query(`ALTER TABLE "user_progress" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "estimated_duration"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "total_points"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "modules" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "modules" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "modules" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "block_answers" DROP COLUMN "is_correct"`);
        await queryRunner.query(`ALTER TABLE "block_answers" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "block_answers" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "correct_pair"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "left_item"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "right_item"`);
        await queryRunner.query(`ALTER TABLE "blocks" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "blocks" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "blocks" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "blocks" DROP COLUMN "resource_url"`);
        await queryRunner.query(`ALTER TABLE "user_answer_details" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "user_answer_details" DROP COLUMN "custom_answer"`);
        await queryRunner.query(`ALTER TABLE "user_block_responses" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "user_block_responses" DROP COLUMN "is_correct"`);
        await queryRunner.query(`ALTER TABLE "user_actions" DROP COLUMN "action_type"`);
        await queryRunner.query(`DROP TYPE "public"."user_actions_action_type_enum"`);
        await queryRunner.query(`ALTER TABLE "user_actions" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "user_actions" DROP COLUMN "ip_address"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password_set"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password_reset_expires"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email_confirmed"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password_reset_token"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email_confirmation_token"`);
        await queryRunner.query(`ALTER TABLE "cities" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "cities" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "cities" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "avg_temperature"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "soil_type"`);
        await queryRunner.query(`ALTER TABLE "levels" DROP COLUMN "required_points"`);
        await queryRunner.query(`ALTER TABLE "levels" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "levels" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "levels" DROP COLUMN "deleted_at"`);
        await queryRunner.query(`ALTER TABLE "regions" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "regions" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "regions" ADD "deletedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "badges" ADD "imageUrl" character varying`);
        await queryRunner.query(`ALTER TABLE "badges" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "badges" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "badges" ADD "deletedAt" TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."challenges_challengetype_enum" AS ENUM('educational', 'practical', 'community')`);
        await queryRunner.query(`ALTER TABLE "challenges" ADD "challengeType" "public"."challenges_challengetype_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "challenges" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "challenges" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "challenges" ADD "deletedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_challenges" ADD "completedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_challenges" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_progress" ADD "completedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_progress" ADD "earnedPoints" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_progress" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "estimatedDuration" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "totalPoints" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "deletedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "modules" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "modules" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "modules" ADD "deletedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "block_answers" ADD "isCorrect" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "block_answers" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "block_answers" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "leftItem" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "rightItem" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "correctPair" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "blocks" ADD "resourceUrl" character varying`);
        await queryRunner.query(`ALTER TABLE "blocks" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "blocks" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "blocks" ADD "deletedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_answer_details" ADD "customAnswer" text`);
        await queryRunner.query(`ALTER TABLE "user_answer_details" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_block_responses" ADD "isCorrect" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_block_responses" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`CREATE TYPE "public"."user_actions_actiontype_enum" AS ENUM('login', 'logout', 'guide_started', 'guide_completed', 'module_completed', 'challenge_started', 'challenge_completed', 'badge_earned', 'level_up', 'password_change', 'profile_update')`);
        await queryRunner.query(`ALTER TABLE "user_actions" ADD "actionType" "public"."user_actions_actiontype_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_actions" ADD "ipAddress" character varying`);
        await queryRunner.query(`ALTER TABLE "user_actions" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ADD "passwordSet" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "users" ADD "passwordResetToken" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "users" ADD "passwordResetExpires" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "users" ADD "emailConfirmationToken" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "users" ADD "emailConfirmed" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "users" ADD "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ADD "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ADD "deletedAt" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "cities" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "cities" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "cities" ADD "deletedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "soilType" character varying`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "avgTemperature" double precision`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "deletedAt" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "levels" ADD "requiredPoints" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "levels" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "levels" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "levels" ADD "deletedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TYPE "public"."user_progress_completion_status_enum" RENAME TO "user_progress_completion_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."user_progress_completion_status_enum" AS ENUM('not_started', 'in_progress', 'completed', 'skipped')`);
        await queryRunner.query(`ALTER TABLE "user_progress" ALTER COLUMN "completion_status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "user_progress" ALTER COLUMN "completion_status" TYPE "public"."user_progress_completion_status_enum" USING "completion_status"::"text"::"public"."user_progress_completion_status_enum"`);
        await queryRunner.query(`ALTER TABLE "user_progress" ALTER COLUMN "completion_status" SET DEFAULT 'not_started'`);
        await queryRunner.query(`DROP TYPE "public"."user_progress_completion_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."blocks_type_enum" RENAME TO "blocks_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."blocks_type_enum" AS ENUM('text', 'video', 'image', 'question', 'interactive', 'quiz')`);
        await queryRunner.query(`ALTER TABLE "blocks" ALTER COLUMN "type" TYPE "public"."blocks_type_enum" USING "type"::"text"::"public"."blocks_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."blocks_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."blocks_dynamic_type_enum" RENAME TO "blocks_dynamic_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."blocks_dynamic_type_enum" AS ENUM('drag_drop', 'matching', 'sorting', 'fill_blanks', 'simulation')`);
        await queryRunner.query(`ALTER TABLE "blocks" ALTER COLUMN "dynamic_type" TYPE "public"."blocks_dynamic_type_enum" USING "dynamic_type"::"text"::"public"."blocks_dynamic_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."blocks_dynamic_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."blocks_question_type_enum" RENAME TO "blocks_question_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."blocks_question_type_enum" AS ENUM('multiple_choice', 'true_false', 'open_ended', 'matching', 'ordering')`);
        await queryRunner.query(`ALTER TABLE "blocks" ALTER COLUMN "question_type" TYPE "public"."blocks_question_type_enum" USING "question_type"::"text"::"public"."blocks_question_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."blocks_question_type_enum_old"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."blocks_question_type_enum_old" AS ENUM('factual', 'conceptual', 'procedural', 'metacognitive')`);
        await queryRunner.query(`ALTER TABLE "blocks" ALTER COLUMN "question_type" TYPE "public"."blocks_question_type_enum_old" USING "question_type"::"text"::"public"."blocks_question_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."blocks_question_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."blocks_question_type_enum_old" RENAME TO "blocks_question_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."blocks_dynamic_type_enum_old" AS ENUM('quiz', 'drag_drop', 'matching', 'fill_blanks')`);
        await queryRunner.query(`ALTER TABLE "blocks" ALTER COLUMN "dynamic_type" TYPE "public"."blocks_dynamic_type_enum_old" USING "dynamic_type"::"text"::"public"."blocks_dynamic_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."blocks_dynamic_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."blocks_dynamic_type_enum_old" RENAME TO "blocks_dynamic_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."blocks_type_enum_old" AS ENUM('text', 'video', 'image', 'single_choice', 'multiple_choice', 'relational', 'text_input')`);
        await queryRunner.query(`ALTER TABLE "blocks" ALTER COLUMN "type" TYPE "public"."blocks_type_enum_old" USING "type"::"text"::"public"."blocks_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."blocks_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."blocks_type_enum_old" RENAME TO "blocks_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."user_progress_completion_status_enum_old" AS ENUM('not_started', 'in_progress', 'completed')`);
        await queryRunner.query(`ALTER TABLE "user_progress" ALTER COLUMN "completion_status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "user_progress" ALTER COLUMN "completion_status" TYPE "public"."user_progress_completion_status_enum_old" USING "completion_status"::"text"::"public"."user_progress_completion_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "user_progress" ALTER COLUMN "completion_status" SET DEFAULT 'not_started'`);
        await queryRunner.query(`DROP TYPE "public"."user_progress_completion_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."user_progress_completion_status_enum_old" RENAME TO "user_progress_completion_status_enum"`);
        await queryRunner.query(`ALTER TABLE "levels" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "levels" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "levels" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "levels" DROP COLUMN "requiredPoints"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "avgTemperature"`);
        await queryRunner.query(`ALTER TABLE "zone" DROP COLUMN "soilType"`);
        await queryRunner.query(`ALTER TABLE "cities" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "cities" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "cities" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "emailConfirmed"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "emailConfirmationToken"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "passwordResetExpires"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "passwordResetToken"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "passwordSet"`);
        await queryRunner.query(`ALTER TABLE "user_actions" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "user_actions" DROP COLUMN "ipAddress"`);
        await queryRunner.query(`ALTER TABLE "user_actions" DROP COLUMN "actionType"`);
        await queryRunner.query(`DROP TYPE "public"."user_actions_actiontype_enum"`);
        await queryRunner.query(`ALTER TABLE "user_block_responses" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "user_block_responses" DROP COLUMN "isCorrect"`);
        await queryRunner.query(`ALTER TABLE "user_answer_details" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "user_answer_details" DROP COLUMN "customAnswer"`);
        await queryRunner.query(`ALTER TABLE "blocks" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "blocks" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "blocks" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "blocks" DROP COLUMN "resourceUrl"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "correctPair"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "rightItem"`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" DROP COLUMN "leftItem"`);
        await queryRunner.query(`ALTER TABLE "block_answers" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "block_answers" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "block_answers" DROP COLUMN "isCorrect"`);
        await queryRunner.query(`ALTER TABLE "modules" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "modules" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "modules" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "totalPoints"`);
        await queryRunner.query(`ALTER TABLE "guide" DROP COLUMN "estimatedDuration"`);
        await queryRunner.query(`ALTER TABLE "user_progress" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "user_progress" DROP COLUMN "earnedPoints"`);
        await queryRunner.query(`ALTER TABLE "user_progress" DROP COLUMN "completedAt"`);
        await queryRunner.query(`ALTER TABLE "user_challenges" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "user_challenges" DROP COLUMN "completedAt"`);
        await queryRunner.query(`ALTER TABLE "challenges" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "challenges" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "challenges" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "challenges" DROP COLUMN "challengeType"`);
        await queryRunner.query(`DROP TYPE "public"."challenges_challengetype_enum"`);
        await queryRunner.query(`ALTER TABLE "badges" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "badges" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "badges" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "badges" DROP COLUMN "imageUrl"`);
        await queryRunner.query(`ALTER TABLE "regions" DROP COLUMN "deletedAt"`);
        await queryRunner.query(`ALTER TABLE "regions" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "regions" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "levels" ADD "deleted_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "levels" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "levels" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "levels" ADD "required_points" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "soil_type" character varying`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "deleted_at" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "zone" ADD "avg_temperature" double precision`);
        await queryRunner.query(`ALTER TABLE "cities" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "cities" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "cities" ADD "deleted_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email_confirmation_token" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password_reset_token" character varying(255)`);
        await queryRunner.query(`ALTER TABLE "users" ADD "deleted_at" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "users" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email_confirmed" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password_reset_expires" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password_set" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "user_actions" ADD "ip_address" character varying`);
        await queryRunner.query(`ALTER TABLE "user_actions" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`CREATE TYPE "public"."user_actions_action_type_enum" AS ENUM('login', 'logout', 'guide_started', 'guide_completed', 'module_completed', 'challenge_started', 'challenge_completed', 'badge_earned', 'level_up', 'password_change', 'profile_update')`);
        await queryRunner.query(`ALTER TABLE "user_actions" ADD "action_type" "public"."user_actions_action_type_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_block_responses" ADD "is_correct" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_block_responses" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_answer_details" ADD "custom_answer" text`);
        await queryRunner.query(`ALTER TABLE "user_answer_details" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "blocks" ADD "resource_url" character varying`);
        await queryRunner.query(`ALTER TABLE "blocks" ADD "deleted_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "blocks" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "blocks" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "right_item" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "left_item" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "relational_pairs" ADD "correct_pair" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "block_answers" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "block_answers" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "block_answers" ADD "is_correct" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "modules" ADD "deleted_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "modules" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "modules" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "deleted_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "total_points" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "guide" ADD "estimated_duration" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_progress" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_progress" ADD "earned_points" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_progress" ADD "completed_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "user_challenges" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_challenges" ADD "completed_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "challenges" ADD "deleted_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "challenges" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "challenges" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`CREATE TYPE "public"."challenges_challenge_type_enum" AS ENUM('educational', 'practical', 'community')`);
        await queryRunner.query(`ALTER TABLE "challenges" ADD "challenge_type" "public"."challenges_challenge_type_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "badges" ADD "image_url" character varying`);
        await queryRunner.query(`ALTER TABLE "badges" ADD "deleted_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "badges" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "badges" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "regions" ADD "deleted_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "regions" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "regions" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
    }

}
